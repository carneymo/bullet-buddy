{"version":3,"sources":["components/RawBulletTextArea.js","components/Bullets/Synonym.js","components/Bullets/Word.js","components/Bullets/Bullet.js","components/Bullets/BulletEditor.js","components/Bullets/BulletOutputViewerBullet.js","components/Bullets/BulletOutputViewer.js","components/AcronymViewer.js","components/Abbreviations/AbbreviationTable.js","components/System/Saver.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Synonym","key","this","props","synonym","parentIndex","className","onClick","Word","previousLookup","handleTimeout","handlePopoverOpen","setTimeout","getSynonyms","value","setState","open","handlePopoverClose","clearTimeout","handleSynonymClick","synonyms","changeWord","handleHover","isNotEditable","word","Boolean","match","length","index","getAbbreviations","abbreviationData","abbreviation","find","row","abbr","toLowerCase","Axios","get","then","res","status","data","all","map","item","state","catch","err","console","log","JSON","stringify","isEditable","bind","prevProps","prevState","snapshot","dynamicClassName","abbrvData","onMouseEnter","onMouseLeave","synList","syn","Bullet","tokenize","text","output","split","forEach","seg","innerSeg","push","s","tweak","sentence","replace","newWord","i","newBullet","updateBulletText","join","indexOfColon","indexOfDashes","BulletEditor","extractBullets","bullets","shift","bullet","trim","newText","charAt","toUpperCase","slice","updateInputText","onChange","e","c","nativeEvent","target","childNodes","Array","from","node","innerText","ref","createRef","inputBullets","style","width","BulletOutputViewerBullet","xToPx","x","div","document","createElement","display","height","body","appendChild","px","parseFloat","window","getComputedStyle","parentNode","removeChild","evaluateBullet","current","idealWidth","oldPWidth","getBoundingClientRect","widthDiff","getNormalBullet","getSmallestBullet","getLargestBullet","idealHeight","optimized","bulletText","processing","processed","currentBulletText","newBulletText","optimizeBullet","handleBulletChange","Promise","resolve","setStateAsync","prevEval","prevBullet","grow","spaceIndexes","terminate","useIndex","action","len","optimal","pop","val","splice","Math","floor","space","substring","currentEval","BulletOutputViewer","handleSelectionCopy","preventDefault","getSelection","toString","clipboardData","setData","handleCopyButtonClick","range","createRange","selectNode","removeAllRanges","addRange","execCommand","bulletsText","onCopy","marginTop","Button","variant","color","size","startIcon","AcronymViewer","extractAcronyms","acs","sort","alreadyAdded","indexOf","acronyms","AbbreviationTable","density","components","Toolbar","CustomToolbar","rows","MilitaryDictionary","columns","field","headerName","hide","filterable","pagination","Alert","forwardRef","elevation","Saver","handleClose","event","reason","setOpen","tab","disabled","openState","Save","onSave","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","App","storageKey","getStoredData","localStorage","getItem","parse","error","saveData","lastSave","Date","toLocaleString","setItem","bulletInputText","setAbbreviationTable","newTable","filter","abbreviationTable","handleTextAreaUpdate","inputTextRef","scrollHeight","bulletTypeChange","newValue","tabValue","bulletType","drawerOpen","thesaurusViewer","visible","posX","posY","wordList","lastSaved","el","querySelector","remove","widthSettings","OPR","EPR","widthSetting","currentBgColor","id","AppBar","position","backgroundColor","Typography","Tabs","Tab","label","IconButton","edge","aria-label","sx","mr","Container","maxWidth","Grid","container","justifyContent","spacing","xs","md","lg","xl","align","resize","minHeight","component","href","rel","alignCenter","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8324dc5e.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * Input Bullet Text Area\n */\nclass InputBulletTextArea extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * Component Did Mount\n   */\n  componentDidMount() {}\n\n  /**\n   * Text Area Update\n   * @param event\n   */\n  textAreaUpdate = (event) => {\n    this.setState({ text: event.target.value });\n  };\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n\n    const widthSettings = {\n      EPR: \"202.321mm\",\n      OPR: \"201.041mm\",\n    };\n\n    return (\n      <textarea\n        rows={5}\n        value={this.state.text}\n        onChange={this.textAreaUpdate}\n        className=\"bullet-text\"\n        style={{\n          width: widthSettings[this.props.bulletType],\n          resize: \"none\",\n        }}\n      />\n    );\n  }\n}\n\nexport default InputBulletTextArea;\n","import React from \"react\";\n\n/**\n *\n */\nclass Synonym extends React.Component {\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n    return (\n      <li\n        key={this.props.synonym + this.props.parentIndex}\n        className=\"synonym-button\"\n        onClick={this.props.onClick}\n      >\n        {this.props.synonym}\n      </li>\n    );\n  }\n\n}\n\nexport default Synonym;","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport Synonym from \"./Synonym\";\r\n\r\n/**\r\n * Word\r\n */\r\nclass Word extends React.Component {\r\n  previousLookup = {};\r\n  handleTimeout = null;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      synonyms: null,\r\n      isEditable: null,\r\n    };\r\n\r\n    this.handlePopoverClose = this.handlePopoverClose.bind(this);\r\n    this.handlePopoverOpen = this.handlePopoverOpen.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Handle Popover Open\r\n   */\r\n  handlePopoverOpen = () => {\r\n    this.handleTimeout = setTimeout(() => {\r\n      this.getSynonyms(this.props.value);\r\n      this.setState({ open: true });\r\n    }, 300);\r\n  };\r\n\r\n  /**\r\n   * Handle Popover Close\r\n   */\r\n  handlePopoverClose = () => {\r\n    clearTimeout(this.handleTimeout);\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleSynonymClick = (synonym, parentIndex) => {\r\n    this.setState({\r\n      open: false,\r\n      value: synonym,\r\n      synonyms: [],\r\n    });\r\n    this.props.changeWord(synonym, parentIndex);\r\n  };\r\n\r\n  /**\r\n   * Handle Hover\r\n   */\r\n  handleHover = () => {\r\n    // Change CSS\r\n    // Load synonyms and populate lists\r\n  };\r\n\r\n  /**\r\n   * Is Not Editable\r\n   * @param word\r\n   * @returns {boolean}\r\n   */\r\n  isNotEditable = (word) => {\r\n    return Boolean(\r\n      (word.match(/([A-Z]{3,})/) != null) |\r\n        (word.match(/([0-9])/) != null) |\r\n        (word.length <= 3) |\r\n        (this.props.index < 1)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get Abbreviations\r\n   * @param word\r\n   * @returns {null|*}\r\n   */\r\n  getAbbreviations = (word) => {\r\n    if (this.props.abbreviationData === null) {\r\n      return null;\r\n    }\r\n    // extract dictionary\r\n    const abbreviation = this.props.abbreviationData.find(\r\n      (row) =>\r\n        (row.abbr === word.toLowerCase()) |\r\n        (row.value.toLowerCase() === word.toLowerCase())\r\n    );\r\n\r\n    return typeof abbreviation === \"undefined\" ? null : abbreviation;\r\n  };\r\n\r\n  /**\r\n   * Get Synonyms\r\n   * @param word\r\n   */\r\n  getSynonyms = (word) => {\r\n    ////console.log(\"Attempting to get synonyms for: \" + word)\r\n    if (word in this.previousLookup) {\r\n      return this.previousLookup[word];\r\n    } else {\r\n      if (word.length > 3) {\r\n        Axios.get(\"https://api.datamuse.com/words?max=15&ml=\" + word)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              const data = res.data;\r\n              if (data.length !== 0) {\r\n                const all = data.map((item) => {\r\n                  return item.word;\r\n                });\r\n                this.setState({ synonyms: all });\r\n                this.previousLookup[word] = all;\r\n              }\r\n            } else {\r\n              this.setState({ synonyms: [] });\r\n            }\r\n          })\r\n          .then(() => {\r\n            if(this.state.synonyms.length > 0) {\r\n\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(`ERR: ${JSON.stringify(err)}`);\r\n          });\r\n      } else {\r\n        this.setState({ synonyms: [] });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Component Did Mount\r\n   */\r\n  componentDidMount() {\r\n    if (this.isNotEditable(this.props.value)) {\r\n      this.setState({ isEditable: false });\r\n    } else {\r\n      this.setState({ isEditable: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Component Did Update\r\n   * @param prevProps\r\n   * @param prevState\r\n   * @param snapshot\r\n   */\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.value !== prevProps.value && this.state.isEditable) {\r\n      this.getSynonyms(this.props.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render\r\n   * @returns {JSX.Element}\r\n   */\r\n  render() {\r\n    let word = this.props.value;\r\n\r\n    let dynamicClassName = \"bullet-editor-word-editable\";\r\n\r\n    // Check if able to be abbreviated\r\n    const abbrvData = this.getAbbreviations(word);\r\n\r\n    if (abbrvData !== null) {\r\n      if (abbrvData.value.toLowerCase() === word.toLowerCase()) {\r\n        // Word can be Abbreviated\r\n        dynamicClassName = dynamicClassName + \" abbreviated popup\";\r\n        return (\r\n          <span\r\n            className={dynamicClassName}\r\n            onMouseEnter={this.handlePopoverOpen}\r\n            onMouseLeave={this.handlePopoverClose}\r\n          >\r\n            {word}\r\n            <span className={this.state.open ? \"popuptext show\" : \"popuptext\"}>\r\n              <ul className=\"popuptextlist\">\r\n                <li\r\n                  className=\"synonym-button\"\r\n                  onClick={() =>\r\n                    this.props.changeWord(\r\n                      abbrvData.abbr,\r\n                      this.props.parentIndex\r\n                    )\r\n                  }\r\n                >\r\n                  {abbrvData.abbr}\r\n                </li>\r\n              </ul>\r\n            </span>\r\n          </span>\r\n        );\r\n      }\r\n\r\n      if (abbrvData.abbr === word) {\r\n        // Already abbreviated word\r\n        dynamicClassName = dynamicClassName + \" approved-abbreviation popup\";\r\n        return (\r\n          <span\r\n            className={dynamicClassName}\r\n            onMouseEnter={this.handlePopoverOpen}\r\n            onMouseLeave={this.handlePopoverClose}\r\n          >\r\n            {word}\r\n            <span className={this.state.open ? \"popuptext show\" : \"popuptext\"}>\r\n              <ul className=\"popuptextlist\">\r\n                <li\r\n                  className=\"synonym-button\"\r\n                  onClick={() =>\r\n                    this.props.changeWord(\r\n                      abbrvData.value.toLowerCase(),\r\n                      this.props.parentIndex\r\n                    )\r\n                  }\r\n                >\r\n                  {abbrvData.value}\r\n                </li>\r\n              </ul>\r\n            </span>\r\n          </span>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.isNotEditable(word)) {\r\n      dynamicClassName = \"bullet-editor-word popup\";\r\n      return <span className={dynamicClassName}>{word}</span>;\r\n    }\r\n\r\n    dynamicClassName = dynamicClassName + \" popup\";\r\n\r\n    let synList = null;\r\n    if (this.state.synonyms !== null) {\r\n      synList = this.state.synonyms.map((syn) => (\r\n        <Synonym\r\n          key={syn}\r\n          className=\"synonym-button\"\r\n          parentIndex={this.props.parentIndex}\r\n          synonym={syn}\r\n          onClick={() => this.handleSynonymClick(syn, this.props.parentIndex)}\r\n        />\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <span\r\n        className={dynamicClassName}\r\n        onMouseEnter={this.handlePopoverOpen}\r\n        onMouseLeave={this.handlePopoverClose}\r\n      >\r\n        {word}\r\n        <span className={this.state.open ? \"popuptext show\" : \"popuptext\"}>\r\n          <ul className=\"popuptextlist\">{synList}</ul>\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Word;\r\n","import React from \"react\";\nimport Word from \"./Word\";\n\n/**\n * Class Bullet\n */\nclass Bullet extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      indexOfColon: null,\n      indexOfDashes: null,\n    };\n    this.changeWord = this.changeWord.bind(this);\n  }\n\n  /**\n   * Component Did Mount\n   */\n  componentDidMount() {}\n\n  /**\n   * Component Did Update\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  /**\n   * Tokenize\n   * @param text\n   * @returns {*[]}\n   */\n  tokenize = (text) => {\n    let output = [];\n\n    text.split(/\\s/).forEach((seg) => {\n      let innerSeg = seg.split(/([/;,-])/);\n      if (innerSeg.length === 1) {\n        output.push(seg);\n        output.push(\" \");\n      } else {\n        innerSeg.forEach((s) => {\n          if (s !== \"\") output.push(s);\n        });\n        output.push(\" \");\n      }\n    });\n    return output;\n  };\n\n  /**\n   * Tweak\n   * @param sentence\n   * @returns {*}\n   */\n  tweak = (sentence) => {\n    // adds a 0-width space (\\u200B) after forward slashes to cause them to wrap\n    sentence = sentence.replace(/(\\w)\\//g, \"$1/\\u200B\");\n\n    // adds a non-breaking dash (\\u2011) instead of a dash to prevent wrapping\n    sentence = sentence.replace(/-/g, \"\\u2011\");\n    return sentence;\n  };\n\n  /**\n   * Change Word\n   * @param newWord\n   * @param i\n   */\n  changeWord = (newWord, i) => {\n    let newBullet = this.tokenize(this.props.text);\n    newBullet[i] = newWord;\n    this.props.updateBulletText(newBullet.join(\"\"), this.props.parentIndex);\n  };\n\n  /**\n   * Render\n   * @returns {unknown[]}\n   */\n  render() {\n    const { text } = this.props;\n    return this.tokenize(text).map((word,i) => {\n      return (\n        <Word\n          key={\"popup\" + i}\n          value={word}\n          parentIndex={i}\n          changeWord={this.changeWord}\n          abbreviationData={this.props.abbreviationData}\n        />\n      );\n    });\n  }\n}\n\nexport default Bullet;\n","import React from \"react\";\nimport Bullet from \"./Bullet\";\n\n/**\n * Bullet Editor\n */\nclass BulletEditor extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      bullets: [],\n    };\n    this.ref = React.createRef();\n    this.updateBulletText = this.updateBulletText.bind(this);\n  }\n\n  /**\n   * Component Did Mount\n   */\n  componentDidMount() {\n    this.setState({\n      bullets: this.extractBullets(this.props.inputBullets),\n    });\n  }\n\n  /**\n   * Component Did Update\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.inputBullets !== prevProps.inputBullets) {\n      this.setState({ bullets: this.extractBullets(this.props.inputBullets) });\n    }\n  }\n\n  /**\n   * Extract Bullets\n   * @param text\n   * @returns {*}\n   */\n  extractBullets = (text) => {\n    let bullets = text.split(/-\\s/);\n    bullets.shift();\n    bullets = bullets.map((bullet) => {\n      return \"- \" + bullet.trim();\n    });\n    return bullets;\n  };\n\n  /**\n   * Update Bullet Text\n   * @param newText\n   * @param i\n   */\n  updateBulletText = (newText, i) => {\n    let bullets = this.state.bullets;\n    bullets[i] = newText;\n    bullets.join(\" \");\n    bullets[i] = bullets[i].replace(/\\s;\\s/, \";\");\n    bullets[i] = bullets[i].replace(/\\s-{2}\\s/, \"--\");\n    bullets[i] =\n      \"- \" + bullets[i].charAt(2).toUpperCase() + bullets[i].slice(3);\n    this.props.updateInputText(bullets.join(\"\\n\"));\n  };\n\n  /**\n   * On Change\n   * @param e\n   * @param i\n   */\n  onChange = (e, i) => {\n    let c = e.nativeEvent.target.childNodes;\n    c = Array.from(c).map((node) => {\n      return node.innerText;\n    });\n    this.updateBulletText(c.join(\" \"), i);\n  };\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n    return (\n      <div>\n        <div className=\"bullet-editor\" style={{ width: this.props.width }}>\n          {this.state.bullets.map((bullet, i) => {\n            return (\n              <div className=\"bullet-editor-bullet\"\n                   key={`bullet${i}`}>\n                <Bullet\n                  text={bullet}\n                  parentIndex={i}\n                  updateBulletText={this.updateBulletText}\n                  abbreviationData={this.props.abbreviationData}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"legend\">\n          Legend:\n          <span className=\"approved-abbreviation\">Approved Abbreviation</span>\n          <span className=\"abbreviatable\">Abbreviatable Word</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BulletEditor;","import React from \"react\";\r\n\r\nconst smallSpace = \"\\u2006\"; // 1/6 em space [same as thinspace: \\u2009]\r\n// const midSpace = \"\\u2005\"; // 1/4 em space\r\n// const normalSpace = \" \";\r\nconst largeSpace = \"\\u2004\"; // 1/3 em space (thick space)\r\n\r\n/**\r\n * Bullet Output Viewer Bullet\r\n */\r\nclass BulletOutputViewerBullet extends React.Component {\r\n  /**\r\n   * Constructor\r\n   * @param props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n    this.state = {\r\n      idealHeight: null,\r\n      idealWidth: null,\r\n      optimized: false,\r\n      bulletText: null,\r\n    };\r\n    this.processing = false;\r\n    this.processed = false;\r\n  }\r\n\r\n  /**\r\n   * Component Did Mount\r\n   */\r\n  componentDidMount() {\r\n    this.setState({ bulletText: this.props.bulletText });\r\n  }\r\n\r\n  /**\r\n   * Component Did Update\r\n   * @param prevProps\r\n   * @param prevState\r\n   * @param snapshot\r\n   */\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { currentBulletText } = this.state;\r\n    const { width } = this.props;\r\n\r\n    let newBulletText =\r\n      prevState.bulletText !== currentBulletText && currentBulletText !== null;\r\n\r\n    // We have a props update, clear everything and start over\r\n    if (\r\n      this.props.bulletText !== prevProps.bulletText ||\r\n      width !== prevProps.width\r\n    ) {\r\n      this.processing = false;\r\n      this.processed = false;\r\n      this.setState({ bulletText: this.props.bulletText, optimized: false });\r\n    } else if (newBulletText && !this.processing && !this.processed) {\r\n      console.log(\"did update with new state to process\");\r\n      this.optimizeBullet();\r\n      this.props.handleBulletChange(this.state.bulletText, this.props.index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * X to Pixel\r\n   * @param x\r\n   * @returns {number}\r\n   */\r\n  xToPx = (x) => {\r\n    let div = document.createElement(\"div\");\r\n    div.style.display = \"block\";\r\n    div.style.height = x;\r\n    document.body.appendChild(div);\r\n    let px = parseFloat(window.getComputedStyle(div, null).height);\r\n    div.parentNode.removeChild(div);\r\n    return px;\r\n  };\r\n\r\n  /**\r\n   * Evaluate Bullet\r\n   * @returns {{widthDiff: number}}\r\n   */\r\n  evaluateBullet = () => {\r\n    if (this.ref !== null) {\r\n      const node = this.ref.current;\r\n      const parentNode = node.parentNode;\r\n\r\n      let idealWidth = this.xToPx(this.props.width);\r\n\r\n      // // Undo wrapping so we get the single line height\r\n      // node.style.whiteSpace = 'nowrap';\r\n\r\n      // let idealHeight = node.getBoundingClientRect().height;\r\n      let oldPWidth = parentNode.style.width;\r\n      parentNode.style.width = \"800.00mm\";\r\n\r\n      const { width, height } = node.getBoundingClientRect();\r\n\r\n      // // Re-enable wrapping\r\n      // node.style.whiteSpace = 'pre-wrap';\r\n      // node.style.wordBreak = \"break-word\";\r\n      parentNode.style.width = oldPWidth;\r\n\r\n      let widthDiff = width - idealWidth;\r\n\r\n      // if (height > idealHeight + 2) {\r\n      //   wrapped = true;\r\n      // }\r\n\r\n      ////console.log(`bullet width difference: ${widthDiff}`)\r\n      return { widthDiff: widthDiff };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get Normal Bullet\r\n   * @param text\r\n   * @returns {string}\r\n   */\r\n  getNormalBullet = (text) => {\r\n    let output = text.split(/\\s/);\r\n    output.shift(); // remove hyphen then add later\r\n    output = output.join(\" \");\r\n    return \"- \" + output.trim();\r\n  };\r\n\r\n  /**\r\n   * Get Smallest Bullet\r\n   * @param text\r\n   * @returns {string}\r\n   */\r\n  getSmallestBullet = (text) => {\r\n    let output = text.split(/\\s/);\r\n    output.shift(); // remove hyphen then add later\r\n    output = output.join(smallSpace);\r\n    return \"- \" + output.trim();\r\n  };\r\n\r\n  /**\r\n   * Get Largest Bullet\r\n   * @param text\r\n   * @returns {string}\r\n   */\r\n  getLargestBullet = (text) => {\r\n    let output = text.split(/\\s/);\r\n    output.shift(); // remove hypen then add later\r\n    output = output.join(largeSpace);\r\n    return \"- \" + output.trim();\r\n  };\r\n\r\n  /**\r\n   * Set STate Async\r\n   * @param state\r\n   * @returns {Promise<unknown>}\r\n   */\r\n  setStateAsync(state) {\r\n    return new Promise((resolve) => {\r\n      this.setState(state, resolve);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Optimize Bullet\r\n   * @returns {Promise<string|string>}\r\n   */\r\n  async optimizeBullet() {\r\n    let bullet = this.state.bulletText;\r\n    if (bullet === null) {\r\n      return;\r\n    }\r\n    this.processing = true;\r\n    console.log(\"building bullet: \" + bullet);\r\n    bullet = this.getNormalBullet(bullet);\r\n    await this.setStateAsync({ bulletText: bullet });\r\n    let prevEval = this.evaluateBullet();\r\n    let prevBullet = bullet;\r\n    let grow = true;\r\n\r\n    if (prevEval.widthDiff > -0.02 && prevEval.widthDiff < 0) {\r\n      // We are withing 1mm already\r\n      console.log(\"Bullet Already Optimized\");\r\n      this.processed = true;\r\n      this.processing = false;\r\n      this.setState({ bulletText: bullet, optimized: true });\r\n      return;\r\n    }\r\n\r\n    if (prevEval.widthDiff > 0) {\r\n      // shrink bullet\r\n      console.log(\"Shrinking Bullet: \" + bullet);\r\n      grow = false;\r\n    } else {\r\n      console.log(\"Shrinking Bullet: \" + bullet);\r\n    }\r\n\r\n    let spaceIndexes = [];\r\n\r\n    // Find position of all space chars\r\n    Array.from(bullet).forEach((word, i) => {\r\n      if (word.match(/\\s/)) {\r\n        spaceIndexes.push(i);\r\n      }\r\n    });\r\n\r\n    // Remove the first space since we dont want to add one after hyphen\r\n    spaceIndexes.shift();\r\n\r\n    let terminate = false;\r\n    let useIndex = [];\r\n    let action = 0;\r\n    let len = spaceIndexes.length;\r\n    let optimal = true;\r\n\r\n    // Shuffle up the space replacement\r\n    for (let i = 0; i < len; i++) {\r\n      switch (action) {\r\n        case 0:\r\n          useIndex.push(spaceIndexes.shift());\r\n          break; // change space towards Beginning\r\n\r\n        case 1:\r\n          useIndex.push(spaceIndexes.pop());\r\n          break; // Change space towards end\r\n\r\n        case 2:\r\n          let val = spaceIndexes.splice(Math.floor(spaceIndexes.length / 2), 1);\r\n          useIndex.push(val[0]);\r\n          break; // Change space in the middle\r\n\r\n        default:\r\n          break;\r\n      }\r\n      action += 1;\r\n      if (action === 3) {\r\n        action = 0;\r\n      }\r\n    }\r\n\r\n    while (!terminate) {\r\n      if (useIndex.length === 0) {\r\n        console.log(\"exhausted all index values\");\r\n        terminate = true;\r\n        optimal = false;\r\n        continue;\r\n      }\r\n\r\n      const space = grow ? largeSpace : smallSpace;\r\n\r\n      // Replace the index with the appropriate space char\r\n      let i = useIndex.shift();\r\n      bullet = bullet.substring(0, i) + space + bullet.substring(i + 1);\r\n\r\n      // Re-evaluate the size attributes\r\n      await this.setStateAsync({ bulletText: bullet });\r\n      let currentEval = this.evaluateBullet();\r\n\r\n      if (grow) {\r\n        // IF we are still short of the line\r\n        if (currentEval.widthDiff < 0) {\r\n          // Still room to go.\r\n          prevEval = currentEval;\r\n          prevBullet = bullet;\r\n          continue;\r\n        }\r\n        // If we past the line\r\n        if (currentEval.widthDiff > 0) {\r\n          // Grew to big keep the old bullet\r\n          bullet = prevBullet;\r\n          terminate = true;\r\n          optimal = true;\r\n        }\r\n      } else {\r\n        if (currentEval.widthDiff > 0) {\r\n          prevEval = currentEval;\r\n          prevBullet = bullet;\r\n          continue;\r\n        }\r\n\r\n        if (currentEval.widthDiff < 0) {\r\n          optimal = true;\r\n          terminate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // If we get here we should be optimized!\r\n    this.processed = true;\r\n    this.processing = false;\r\n    this.setState({ bulletText: bullet, optimized: optimal });\r\n\r\n    return bullet;\r\n  }\r\n\r\n  /**\r\n   * Tweak\r\n   * @param sentence\r\n   * @returns {*}\r\n   */\r\n  tweak = (sentence) => {\r\n    // adds a 0-width space (\\u200B) after forward slashes to cause them to wrap\r\n    sentence = sentence.replace(/(\\w)\\//g, \"$1/\\u200B\");\r\n\r\n    // adds a non-breaking dash (\\u2011) instead of a dash to prevent wrapping\r\n    sentence = sentence.replace(/-/g, \"\\u2011\");\r\n    return sentence;\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   * @returns {JSX.Element}\r\n   */\r\n  render() {\r\n    const { optimized } = this.state;\r\n    let className = optimized\r\n      ? \"bullet-output-bullet optimized\"\r\n      : \"bullet-output-bullet notoptimized\";\r\n    return (\r\n      <div className={className} ref={this.ref}>\r\n        {this.state.bulletText}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BulletOutputViewerBullet;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport BulletOutputViewerBullet from \"./BulletOutputViewerBullet\";\n\n/**\n * Bullet Output Viewer\n */\nclass BulletOutputViewer extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      bullets: [],\n    };\n    this.ref = React.createRef();\n  }\n\n  /**\n   * Component Did Mount\n   */\n  componentDidMount() {\n    //console.log(this.props.bulletsText)\n    this.setState({ bullets: this.extractBullets(this.props.bulletsText) });\n  }\n\n  /**\n   * Component Did Update\n   * @param prevProps\n   * @param prevState\n   * @param snapshot\n   */\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.bulletsText !== prevProps.bulletsText) {\n      this.setState({ bullets: this.extractBullets(this.props.bulletsText) });\n    }\n  }\n\n  /**\n   * Extract Bullets\n   * @param text\n   * @returns {*}\n   */\n  extractBullets = (text) => {\n    let bullets = text.split(/-\\s/);\n    bullets.shift();\n    bullets = bullets.map((bullet) => {\n      return \"- \" + bullet.trim() + \"\\r\\n\";\n    });\n    return bullets;\n  };\n\n  /**\n   * Handle Selection Copy\n   * @param e\n   */\n  handleSelectionCopy = (e) => {\n    e.preventDefault();\n    let text = window.getSelection().toString();\n    text = this.extractBullets(text);\n    text = text.join(\"\");\n    text.replace(/\\n/g, \"\\r\\n\"); //need this for WINDOWS!\n    //console.log('Copy event: ' + text)\n    e.clipboardData.setData(\"text/plain\", text);\n  };\n\n  /**\n   * Handle Copy Button Click\n   */\n  handleCopyButtonClick = () => {\n    let range = document.createRange();\n    range.selectNode(this.ref.current);\n    window.getSelection().removeAllRanges(); // clear current selection\n    window.getSelection().addRange(range);\n    document.execCommand(\"copy\");\n    window.getSelection().removeAllRanges(); // clear current selection\n  };\n\n  /**\n   * Handle Bullet Change\n   * @param newText\n   * @param i\n   */\n  handleBulletChange = (newText, i) => {\n    let bullets = this.state.bullets;\n    bullets[i] = newText;\n    this.setState({ bullets: bullets });\n  };\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n    return (\n      <div>\n        <div\n          className=\"bullet-output-container\"\n          style={{ width: this.props.width }}\n          onCopy={this.handleSelectionCopy}\n        >\n          <p>\n            XX. AMAZING BULLETS{\" \"}\n            <mark>(Don't forget to copy to the right place!)</mark>\n          </p>\n          <div ref={this.ref}>\n            {\n              // Create a bullet around each bullet\n              this.state.bullets.map((bullet, i) => {\n                return (\n                  <BulletOutputViewerBullet\n                    width={this.props.width}\n                    bulletText={bullet}\n                    index={i}\n                    key={i.toString()}\n                    handleBulletChange={this.handleBulletChange}\n                  />\n                );\n              })\n            }\n          </div>\n        </div>\n\n        <div style={{ marginTop: \"1em\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={(e) => this.handleCopyButtonClick(e)}\n            startIcon={<FileCopyIcon />}\n          >\n            Copy Bullets to Clipboard\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BulletOutputViewer;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\n/**\n * Acronym Viewer\n *\n * Display of Acronyms\n */\nclass AcronymViewer extends React.Component {\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  /**\n   * Handle Copy Button Click\n   */\n  handleCopyButtonClick = () => {\n    let range = document.createRange();\n    range.selectNode(this.ref.current);\n    window.getSelection().removeAllRanges(); // clear current selection\n    window.getSelection().addRange(range);\n    document.execCommand(\"copy\");\n    window.getSelection().removeAllRanges(); // clear current selection\n  };\n\n  /**\n   * Extract Acronyms\n   * @returns {string|*}\n   */\n  extractAcronyms = () => {\n    const { text } = this.props;\n    if (text === null) {\n      return \"no acronyms yet\";\n    }\n    let acs = text.match(/[A-Z]{2,}/g);\n    if (acs === null) {\n      return \"no acronyms yet\";\n    }\n    acs = acs.sort();\n    let alreadyAdded = [];\n    acs = acs.map((acs) => {\n      if (alreadyAdded.indexOf(acs) === -1) {\n        alreadyAdded.push(acs);\n        return \" (\" + acs + \"); \";\n      }\n      return \"\";\n    });\n    return acs;\n  };\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n    const acronyms = this.extractAcronyms();\n    return (\n      <div>\n        <div\n          className=\"bullet-output-container\"\n          style={{\n            width: this.props.width,\n          }}\n        >\n          <p>\n            X. REMARKS{\" \"}\n            <mark>(use this section to spell out acronyms from the front)</mark>\n          </p>\n          <div className=\"bullet-output-bullet\" ref={this.ref}>\n            {acronyms}\n          </div>\n        </div>\n\n        <div style={{ marginTop: \"1em\" }}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={(e) => this.handleCopyButtonClick(e)}\n            startIcon={<FileCopyIcon />}\n          >\n            Copy Acronym List to Clipboard\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AcronymViewer;\n","import * as React from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarFilterButton\n} from \"@mui/x-data-grid\";\n\nimport MilitaryDictionary from \"./militaryTerms.json\";\n\n/**\n * Abbreviation Table\n */\nclass AbbreviationTable extends React.Component {\n\n  /**\n   * Custom Toolbar\n   * @returns {JSX.Element}\n   * @constructor\n   */\n  CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarFilterButton />\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n    const columns = [\n      { field: \"id\", headerName: \"ID\", width: 35, hide: true, filterable: false },\n      { field: \"term\", headerName: \"Term\", width: 180 },\n      { field: \"definition\", headerName: \"Definition\", width: 300 },\n      { field: \"source\", headerName: \"Source\", width: 200, hide: true, filterable: false },\n    ];\n\n    return (\n      <div style={{ height: 500, width: \"100%\" }}>\n        <div style={{ display: \"flex\", height: \"100%\" }}>\n          <DataGrid\n            density=\"compact\"\n            components={{\n              Toolbar: this.CustomToolbar,\n            }}\n            rows={MilitaryDictionary}\n            columns={columns}\n            pagination\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AbbreviationTable;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Save } from \"@material-ui/icons\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from '@mui/material/Alert';\n\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n/**\n * Saver\n */\nclass Saver extends React.Component {\n\n  /**\n   * Constructor\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      bullets: props.bullets,\n      tab: props.tab,\n      open: false,\n      disabled: false\n    };\n    this.setOpen = this.setOpen.bind(this);\n  }\n\n  /**\n   * Set Open\n   * @param openState\n   */\n  setOpen(openState) {\n    this.setState({open: openState});\n  }\n\n  /**\n   * Handle Close\n   * @param event\n   * @param reason\n   */\n  handleClose = (event, reason) => {\n    if(reason === 'clickaway') {\n      return;\n    }\n    this.setOpen(false);\n  }\n\n  /**\n   * Render\n   * @returns {JSX.Element}\n   */\n  render() {\n    return (\n      <span>\n        <Button\n          disabled={this.props.disabled}\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          startIcon={<Save />}\n          onClick={() => {\n            this.props.onSave();\n            this.setOpen(true);\n          }}\n        >\n          Save\n        </Button>\n        <Snackbar\n          open={this.state.open}\n          autoHideDuration={4000}\n          onClose={this.handleClose}\n          action={this.action}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        >\n          <Alert severity=\"success\">Saved bullets!</Alert>\n        </Snackbar>\n      </span>\n    );\n  }\n}\n\nexport default Saver;","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {\r\n  IconButton,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport \"./styles/css/App.css\";\r\nimport \"./components/RawBulletTextArea\";\r\nimport BulletEditor from \"./components/Bullets/BulletEditor\";\r\nimport BulletOutputViewer from \"./components/Bullets/BulletOutputViewer\";\r\nimport AcronymViewer from \"./components/AcronymViewer\";\r\nimport AbbreviationTable from \"./components/Abbreviations/AbbreviationTable\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Saver from \"./components/System/Saver\";\r\n\r\n/**\r\n * App\r\n */\r\nclass App extends React.Component {\r\n  storageKey = \"bulletBuddyStoredData\";\r\n\r\n  /**\r\n   * Constructor\r\n   * @param props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bulletInputText:\r\n        \"- Action section of bullet should go here; put the how/what you did in this part--bring it home w/ a great impact line\\n- This tool can optimize spacing; output will be red if the optimizer could not fix spacing with 2004 or 2006 Unicode spaces\",\r\n      abbreviationData: [\r\n        { value: \"organizations\", abbr: \"orgs\" },\r\n        { value: \"expandable\", abbr: \"expdble\" },\r\n      ],\r\n      abbreviationTable: [\r\n        { value: \"organizations\", abbr: \"orgs\" },\r\n        { value: \"expandable\", abbr: \"expdble\" },\r\n      ],\r\n      bulletType: \"EPR\",\r\n      tabValue: 0,\r\n      drawerOpen: false,\r\n      thesaurusViewer: {\r\n        visible: false,\r\n        posX: 0,\r\n        posY: 0,\r\n        wordList: null,\r\n      },\r\n      lastSaved: \"\",\r\n    };\r\n    this.inputTextRef = React.createRef();\r\n    this.handleTextAreaUpdate = this.handleTextAreaUpdate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Component Did Mount\r\n   */\r\n  componentDidMount() {\r\n    const el = document.querySelector(\".loader-container\");\r\n    if (el) {\r\n      el.remove(); // removing the spinner element\r\n    }\r\n    let data = this.getStoredData();\r\n    if (data !== null && data !== \"\") {\r\n      if (data.bullets) {\r\n        this.handleTextAreaUpdate(data.bullets);\r\n      }\r\n      if (data.lastSave) {\r\n        this.setState({ lastSave: data.lastSave });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Component Did Update\r\n   * @param prevProps\r\n   * @param prevState\r\n   * @param snapshot\r\n   */\r\n  componentDidUpdate(prevProps, prevState, snapshot) {}\r\n\r\n  /**\r\n   * Get Settings\r\n   * @returns {null|any}\r\n   */\r\n  getStoredData = () => {\r\n    try {\r\n      if (window.localStorage.getItem(this.storageKey)) {\r\n        let data = window.localStorage.getItem(this.storageKey);\r\n        if (data) {\r\n          console.log(data);\r\n          return JSON.parse(data);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  saveData = () => {\r\n    try {\r\n      this.setState({\r\n        lastSave: Date().toLocaleString(),\r\n      });\r\n      window.localStorage.setItem(\r\n        this.storageKey,\r\n        JSON.stringify({\r\n          bullets: this.state.bulletInputText,\r\n          lastSave: this.state.lastSave,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set Abbreviation Table\r\n   * @param abbreviationData\r\n   */\r\n  setAbbreviationTable = (abbreviationData) => {\r\n    let newTable = abbreviationData.filter(\r\n      (row) => row.value !== null && row.abbr !== null\r\n    );\r\n    newTable = newTable.map((row) => {\r\n      row.abbr = row.abbr.trim();\r\n      row.value = row.value.trim();\r\n      return row;\r\n    });\r\n    this.setState({ abbreviationTable: newTable });\r\n  };\r\n\r\n  /**\r\n   * Handle Text Area Update\r\n   * @param text\r\n   */\r\n  handleTextAreaUpdate = (text) => {\r\n    this.inputTextRef.current.style.height =\r\n      this.inputTextRef.current.scrollHeight + \"px\";\r\n    this.setState({ bulletInputText: text });\r\n  };\r\n\r\n  /**\r\n   * Bullet Type Change\r\n   * @param e\r\n   * @param newValue\r\n   */\r\n  bulletTypeChange = (e, newValue) => {\r\n    let bulletTypes = [\"EPR\", \"OPR\"];\r\n    this.setState({ tabValue: newValue, bulletType: bulletTypes[newValue] });\r\n  };\r\n\r\n  /**\r\n   * Render\r\n   * @returns {JSX.Element}\r\n   */\r\n  render() {\r\n    // IMPORTANT, this is what makes the difference in bullet lengths\r\n    const widthSettings = {\r\n      OPR: \"201.050mm\",\r\n      EPR: \"202.321mm\",\r\n    };\r\n\r\n    // Header BG Color changes based on which PR being worked\r\n    const bgColor = {\r\n      OPR: \"#1a6f46\",\r\n      EPR: \"\",\r\n    };\r\n\r\n    const widthSetting = widthSettings[this.state.bulletType];\r\n    const currentBgColor = bgColor[this.state.bulletType];\r\n\r\n    return (\r\n      <div id=\"root\" className=\"root\">\r\n        <AppBar\r\n          position=\"static\"\r\n          className=\"app-bar\"\r\n          style={{ backgroundColor: currentBgColor }}\r\n        >\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" className=\"title\">\r\n              Bullet Buddy!\r\n            </Typography>\r\n            <Tabs\r\n              className=\"\"\r\n              value={this.state.tabValue}\r\n              onChange={this.bulletTypeChange}\r\n            >\r\n              <Tab label=\"EPR/AWD\" />\r\n              <Tab label=\"OPR\" />\r\n            </Tabs>\r\n\r\n            <IconButton\r\n              size=\"medium\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Container className=\"content\" maxWidth=\"xl\">\r\n          <Grid container justifyContent=\"space-around\" spacing={1}>\r\n            <Grid item xs={12} md={12} lg={12} xl={6} align=\"center\">\r\n              <div className=\"container\">\r\n                <Typography variant=\"h6\">Input Bullets Here</Typography>\r\n                <textarea\r\n                  ref={this.inputTextRef}\r\n                  value={this.state.bulletInputText}\r\n                  rows={6}\r\n                  onChange={(e) => this.handleTextAreaUpdate(e.target.value)}\r\n                  className=\"bullet-input-text\"\r\n                  style={{\r\n                    width: widthSettings[this.state.bulletType],\r\n                    resize: \"none\",\r\n                    minHeight: \"5em\",\r\n                  }}\r\n                />\r\n                <div style={{ marginTop: \"1em\" }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => {\r\n                      this.handleTextAreaUpdate(\"\");\r\n                      this.inputTextRef.current.style.height = \"5em\";\r\n                    }}\r\n                  >\r\n                    Clear Input\r\n                  </Button>\r\n                  {\"  \"}\r\n                  <Saver id=\"SaveBulletsButton\" onSave={this.saveData} />\r\n                  <div>\r\n                    <Typography variant=\"subtitle1\">\r\n                      <small>Last Save: {this.state.lastSave}</small>\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"container\">\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  Smart Bullet Editor\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\">\r\n                  Hover over terms to see synonyms\r\n                </Typography>\r\n\r\n                <BulletEditor\r\n                  inputBullets={this.state.bulletInputText}\r\n                  updateInputText={this.handleTextAreaUpdate}\r\n                  abbreviationData={this.state.abbreviationTable}\r\n                  width={widthSetting}\r\n                />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={12} lg={12} xl={6} align=\"center\">\r\n              <div className=\"container\">\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  Bullet Output\r\n                </Typography>\r\n\r\n                <BulletOutputViewer\r\n                  bulletsText={this.state.bulletInputText}\r\n                  width={widthSetting}\r\n                  updateInputText={this.handleTextAreaUpdate}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"container\">\r\n                <AcronymViewer\r\n                  width={widthSetting}\r\n                  text={this.state.bulletInputText}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"container\">\r\n                <Typography variant=\"h6\">\r\n                  Military Abbreviations Table\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\">\r\n                  Use this to find shortn'd words as well as common ABBR for\r\n                  military terms.\r\n                  <br />\r\n                  Use <strong>Filters</strong> to search.\r\n                </Typography>\r\n\r\n                <AbbreviationTable />\r\n\r\n                <Typography variant=\"subtitle1\">\r\n                  <small>\r\n                    Terms from{\" \"}\r\n                    <a\r\n                      href=\"https://www.jcs.mil/Portals/36/Documents/Doctrine/pubs/dictionary.pdf\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      https://www.jcs.mil/Portals/36/Documents/Doctrine/pubs/dictionary.pdf\r\n                    </a>\r\n                    <br />\r\n                    and from AFM 33-336 Tongue and Quill\r\n                  </small>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n        <AppBar position=\"static\" color=\"primary\" className=\"footer-bar\">\r\n          <Container maxWidth=\"md\">\r\n            <p>\r\n              <Typography variant=\"body1\" color=\"inherit\" alignCenter>\r\n                Modified by Ryan Carney-Mogan. | Submit an{\" \"}\r\n                <a href=\"https://github.com/carneymo/bullet-buddy/issues/new/choose\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                  issue\r\n                </a>{\" \"}\r\n                or view the{\" \"}\r\n                <a href=\"https://github.com/carneymo/bullet-buddy/\" target=\"_blank\" rel=\"noreferrer noopener\">GitHub Page</a>\r\n                <br/>\r\n                Original Utility by{\" \"}\r\n                <a href=\"https://github.com/AF-Tools/bullet-buddy/\" target=\"_blank\" rel=\"noreferrer noopener\">Nicholas Schweikart</a>\r\n              </Typography>\r\n            </p>\r\n          </Container>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}